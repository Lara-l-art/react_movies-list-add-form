{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","hadleSubmit","event","newMovie","preventDefault","props","onAdd","setState","this","onSubmit","type","placeholder","value","onChange","target","Component","App","moviesFromServer","addMovie","length","ReactDOM","render","document","getElementById"],"mappings":"oyEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,UCtBGK,EAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IANZ,EASEG,YAAc,SAACC,GAAW,IAAD,EACiC,EAAKF,MACvDG,EAAW,CACfnB,MAHqB,EACfA,MAGNC,YAJqB,EACRA,YAIbC,OALqB,EACKA,OAK1BC,QANqB,EACaA,QAMlCW,OAPqB,EACsBA,QAS7CI,EAAME,iBACN,EAAKC,MAAMC,MAAMH,GACjB,EAAKI,SAAS,CACZvB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,MA1Bd,uDA8BY,IAAD,SACyCU,KAAKR,MAA7ChB,EADD,EACCA,MAAOC,EADR,EACQA,YAAaC,EADrB,EACqBA,OAAQC,EAD7B,EAC6BA,QAEpC,OACE,oCACE,0BACEC,UAAU,eACVqB,SAAUD,KAAKP,aAEf,yBAAKb,UAAU,UACb,2BACEsB,KAAK,OACLC,YAAY,gBACZC,MAAO5B,EACP6B,SAAW,SAACX,GACV,EAAKK,SAAS,CACZvB,MAAOkB,EAAMY,OAAOF,WAI1B,8BACED,YAAY,sBACZC,MAAO3B,EACP4B,SAAW,SAACX,GACV,EAAKK,SAAS,CACZtB,YAAaiB,EAAMY,OAAOF,WAIhC,2BACEF,KAAK,OACLC,YAAY,iBACZC,MAAO1B,EACP2B,SAAW,SAACX,GACV,EAAKK,SAAS,CACZrB,OAAQgB,EAAMY,OAAOF,WAI3B,2BACEF,KAAK,OACLC,YAAY,kBACZC,MAAOzB,EACP0B,SAAW,SAACX,GACV,EAAKK,SAAS,CACZpB,QAASe,EAAMY,OAAOF,YAK9B,4BACExB,UAAU,SACVsB,KAAK,UAFP,aAhFV,GAA8BK,a,OCEjBC,EAAb,4MACEhB,MAAQ,CACNN,OAAQuB,GAFZ,EAKEC,SAAW,SAACtB,GACV,EAAKW,UAAS,SAAAP,GAAK,MAAK,CACtBN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,4BACDE,GADC,IAEJE,OAAQE,EAAMN,OAAOyB,gBAT7B,uDAcY,IACAzB,EAAWc,KAAKR,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUkB,MAAOE,KAAKU,iBAvBhC,GAAyBH,aCDzBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.238f7d0b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  hadleSubmit = (event) => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    event.preventDefault();\n    this.props.onAdd(newMovie);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl } = this.state;\n\n    return (\n      <>\n        <form\n          className=\"addMovieForm\"\n          onSubmit={this.hadleSubmit}\n        >\n          <div className=\"inputs\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={((event) => {\n                this.setState({\n                  title: event.target.value,\n                });\n              })}\n            />\n            <textarea\n              placeholder=\"Enter a description\"\n              value={description}\n              onChange={((event) => {\n                this.setState({\n                  description: event.target.value,\n                });\n              })}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Enter a imgUrl\"\n              value={imgUrl}\n              onChange={((event) => {\n                this.setState({\n                  imgUrl: event.target.value,\n                });\n              })}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"Enter a imdbUrl\"\n              value={imdbUrl}\n              onChange={((event) => {\n                this.setState({\n                  imdbUrl: event.target.value,\n                });\n              })}\n            />\n          </div>\n          <button\n            className=\"button\"\n            type=\"submit\"\n          >\n            Add\n          </button>\n        </form>\n      </>\n\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, {\n        ...movie,\n        imdbId: state.movies.length,\n      }],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}