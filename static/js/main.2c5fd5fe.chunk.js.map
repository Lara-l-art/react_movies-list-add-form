{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","validation","NewMovie","state","imgUrlError","imdbUrlError","textChange","event","target","name","value","setState","handleChange","search","hadleSubmit","imageValid","imdbValid","newMovie","preventDefault","props","onAdd","this","onSubmit","type","placeholder","required","onChange","disabled","Component","App","moviesFromServer","addMovie","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c5fd5fe.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\n// eslint-disable-next-line max-len\nconst validation = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    imgUrlError: false,\n    imdbUrlError: false,\n  };\n\n  textChange = ((event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  })\n\n  handleChange = ((event) => {\n    const { name, value } = event.target;\n\n    if (value.search(validation) !== -1) {\n      this.setState({\n        [name]: value,\n        [`${name}Error`]: false,\n      });\n    } else {\n      this.setState({\n        [name]: value,\n      });\n    }\n  })\n\n  hadleSubmit = (event) => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const imageValid = imgUrl.search(validation);\n    const imdbValid = imdbUrl.search(validation);\n\n    if (imageValid === -1) {\n      this.setState({ imgUrlError: true });\n    }\n\n    if (imdbValid === -1) {\n      this.setState({ imdbUrlError: true });\n    }\n\n    const newMovie = {\n      title,\n      description,\n      imdbUrl,\n      imgUrl,\n      imdbId,\n    };\n\n    event.preventDefault();\n\n    if (imageValid !== -1 && imdbValid !== -1) {\n      this.props.onAdd(newMovie);\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  }\n\n  render() {\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbUrlError,\n      imgUrlError } = this.state;\n\n    return (\n      <>\n        <form\n          className=\"addMovieForm\"\n          onSubmit={this.hadleSubmit}\n        >\n          <div className=\"inputs\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter a title\"\n              value={title}\n              name=\"title\"\n              required\n              onChange={this.textChange}\n            />\n            <textarea\n              placeholder=\"Enter a description\"\n              value={description}\n              name=\"description\"\n              onChange={this.textChange}\n            />\n\n            { imgUrlError\n            && (\n              <div className=\"error-message\">\n                Please enter valid image url\n              </div>\n            ) }\n\n            <input\n              type=\"text\"\n              placeholder=\"Enter a imgUrl\"\n              required\n              value={imgUrl}\n              name=\"imgUrl\"\n              className={`${imgUrlError && 'error'}`}\n              onChange={this.handleChange}\n            />\n\n            { imdbUrlError\n            && (\n              <div className=\"error-message\">\n                Please enter valid imdb url\n              </div>\n            ) }\n\n            <input\n              type=\"text\"\n              required\n              className={`${imdbUrlError && 'error'}`}\n              placeholder=\"Enter a imdbUrl\"\n              name=\"imdbUrl\"\n              value={imdbUrl}\n              onChange={this.handleChange}\n            />\n          </div>\n          <button\n            className=\"button\"\n            type=\"submit\"\n            disabled={imgUrlError || imdbUrlError}\n          >\n            Add\n          </button>\n        </form>\n      </>\n\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, {\n        ...movie,\n        imdbId: state.movies.length,\n      }],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}